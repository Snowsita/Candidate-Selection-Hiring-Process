{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-4a7b-8c9d-0e1f2a3b4c5d",
    "name": "Customer Management API",
    "description": "A collection of requests for the Spring Boot Customer Management microservice.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Clients",
      "item": [
        {
          "name": "Create Client - Success (201)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Juan\",\n    \"lastName\": \"Perez\",\n    \"age\": 30,\n    \"dateOfBirth\": \"1994-08-15\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "clients"
              ]
            },
            "description": "Creates a new client with valid data. Expects an HTTP 201 Created response."
          },
          "response": []
        },
        {
          "name": "Create Client - Validation Error (422)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"\",\n    \"lastName\": null,\n    \"age\": -5,\n    \"dateOfBirth\": \"2030-01-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/clients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "clients"
              ]
            },
            "description": "Attempts to create a client with invalid data to trigger validation rules. Expects an HTTP 422 Unprocessable Entity response."
          },
          "response": []
        },
        {
          "name": "List All Clients",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clients",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "clients"
              ]
            },
            "description": "Retrieves a list of all clients currently stored in the database. Expects an HTTP 200 OK response."
          },
          "response": []
        },
        {
          "name": "Get Client Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/clients/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "clients",
                "stats"
              ]
            },
            "description": "Calculates and retrieves the average age and standard deviation of all clients. Expects an HTTP 200 OK response."
          },
          "response": []
        }
      ],
      "auth": {
        "type": "basic",
        "basic": [
          {
            "key": "password",
            "value": "password",
            "type": "string"
          },
          {
            "key": "username",
            "value": "user",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}
